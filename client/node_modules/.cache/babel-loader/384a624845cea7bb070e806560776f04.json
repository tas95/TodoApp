{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\WorkSpace\\\\todo-mern-app\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Tasks from \"./Tasks\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport { Checkbox, Button } from \"@material-ui/core\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Tasks {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      currentTask: \"\"\n    };\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App flex\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: \"TO-DO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"flex\",\n          style: {\n            margin: \"15px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            size: \"small\",\n            style: {\n              width: \"80%\"\n            },\n            value: this.state.currentTask,\n            required: true,\n            onChange: this.handleChange,\n            placeholder: \"Add New TO-DO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              height: \"40px\"\n            },\n            color: \"primary\",\n            variant: \"outlined\",\n            type: \"submit\",\n            children: \"Add task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(Paper, {\n            className: \"flex task_container\",\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: task.completed,\n              onClick: () => this.handleUpdate(task._id),\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: task.completed ? \"task line_through\" : \"task\",\n              children: task.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.handleDelete(task._id),\n              color: \"secondary\",\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)]\n          }, task._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/asus/Desktop/WorkSpace/todo-mern-app/client/src/App.js"],"names":["React","Tasks","Paper","TextField","Checkbox","Button","App","state","tasks","currentTask","render","handleSubmit","margin","width","handleChange","height","map","task","completed","handleUpdate","_id","handleDelete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,mBAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,mBAAjC;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBL,KAAlB,CAAwB;AAAA;AAAA;AAAA,SACpBM,KADoB,GACZ;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,WAAW,EAAE;AAA1B,KADY;AAAA;;AAEpBC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE,CAAlB;AAAqB,QAAA,SAAS,EAAC,WAA/B;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,QAAQ,EAAE,KAAKI,YADnB;AAEI,UAAA,SAAS,EAAC,MAFd;AAGI,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAHX;AAAA,kCAKI,QAAC,SAAD;AACI,YAAA,OAAO,EAAC,UADZ;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAHX;AAII,YAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,WAJtB;AAKI,YAAA,QAAQ,EAAE,IALd;AAMI,YAAA,QAAQ,EAAE,KAAKK,YANnB;AAOI,YAAA,WAAW,EAAC;AAPhB;AAAA;AAAA;AAAA;AAAA,kBALJ,eAcI,QAAC,MAAD;AACI,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE;AAAV,aADX;AAEI,YAAA,KAAK,EAAC,SAFV;AAGI,YAAA,OAAO,EAAC,UAHZ;AAII,YAAA,IAAI,EAAC,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAyBI;AAAA,oBACKP,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBACP,QAAC,KAAD;AAEI,YAAA,SAAS,EAAC,qBAFd;AAAA,oCAII,QAAC,QAAD;AACI,cAAA,OAAO,EAAEA,IAAI,CAACC,SADlB;AAEI,cAAA,OAAO,EAAE,MAAM,KAAKC,YAAL,CAAkBF,IAAI,CAACG,GAAvB,CAFnB;AAGI,cAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,oBAJJ,eASI;AACI,cAAA,SAAS,EACLH,IAAI,CAACC,SAAL,GACM,mBADN,GAEM,MAJd;AAAA,wBAOKD,IAAI,CAACA;AAPV;AAAA;AAAA;AAAA;AAAA,oBATJ,eAkBI,QAAC,MAAD;AACI,cAAA,OAAO,EAAE,MAAM,KAAKI,YAAL,CAAkBJ,IAAI,CAACG,GAAvB,CADnB;AAEI,cAAA,KAAK,EAAC,WAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBJ;AAAA,aACSH,IAAI,CAACG,GADd;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA2DH;;AA/DmB;;AAkExB,eAAed,GAAf","sourcesContent":["import React from \"react\";\r\nimport Tasks from \"./Tasks\";\r\nimport { Paper, TextField } from \"@material-ui/core\";\r\nimport { Checkbox, Button } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Tasks {\r\n    state = { tasks: [], currentTask: \"\" };\r\n    render() {\r\n        const { tasks } = this.state;\r\n        return (\r\n            <div className=\"App flex\">\r\n                <Paper elevation={3} className=\"container\">\r\n                    <div className=\"heading\">TO-DO</div>\r\n                    <form\r\n                        onSubmit={this.handleSubmit}\r\n                        className=\"flex\"\r\n                        style={{ margin: \"15px 0\" }}\r\n                    >\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            style={{ width: \"80%\" }}\r\n                            value={this.state.currentTask}\r\n                            required={true}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Add New TO-DO\"\r\n                        />\r\n                        <Button\r\n                            style={{ height: \"40px\" }}\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Add task\r\n                        </Button>\r\n                    </form>\r\n                    <div>\r\n                        {tasks.map((task) => (\r\n                            <Paper\r\n                                key={task._id}\r\n                                className=\"flex task_container\"\r\n                            >\r\n                                <Checkbox\r\n                                    checked={task.completed}\r\n                                    onClick={() => this.handleUpdate(task._id)}\r\n                                    color=\"primary\"\r\n                                />\r\n                                <div\r\n                                    className={\r\n                                        task.completed\r\n                                            ? \"task line_through\"\r\n                                            : \"task\"\r\n                                    }\r\n                                >\r\n                                    {task.task}\r\n                                </div>\r\n                                <Button\r\n                                    onClick={() => this.handleDelete(task._id)}\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    delete\r\n                                </Button>\r\n                            </Paper>\r\n                        ))}\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}